.slider {
    position: relative;

    .sliderGroup & {
        margin-bottom: .8rem;
    }
}

.slider-input {
    margin-bottom: -.5rem;
}

.slider-value {
    max-width: 2.5em;
    display: inline-block;
}

.slider-track {
    display: flex;
}

.value-input {
    position: relative;
    top: .3rem;
    font-size: .7rem;
    text-align: left;
    font-family: Lucida Console, monospace;
    margin-left: .5rem;
    appearance: textfield;
    border: 0;
    display: block;
    width: 100%;
    padding: 0;
    color: white;
    background: none;
    border-bottom: 1px solid transparent;

    &:invalid {
        border: 0;
        box-shadow: none;
    }

}

.value-input:hover,
.value-input:focus {
    border-bottom: 1px solid gray;
}


/* Source: https://css-tricks.com/styling-cross-browser-compatible-range-inputs-css/ */

:root {
    --lightgray: rgb(235, 235, 233)
}

input[type=range] {
    -webkit-appearance: none;
    /* Hides the slider so that custom slider can be made */
    width: 100%;
    /* Specific width is required for Firefox. */
    background: transparent;
    /* Otherwise white in Chrome */
}

input[type=range]::-webkit-slider-thumb {
    -webkit-appearance: none;
}

input[type=range]:focus {
    outline: 0;
}

input[type=range]::-ms-track {
    width: 100%;
    cursor: pointer;

    /* Hides the slider so custom styles can be added */
    background: transparent;
    border-color: transparent;
    color: transparent;
}

/* Special styling for WebKit/Blink */
input[type=range]::-webkit-slider-thumb {
    -webkit-appearance: none;
    height: 16px;
    width: 16px;
    border-radius: 3px;
    background: #ffffff;
    cursor: pointer;
    margin-top: -14px;
    /* You need to specify a margin in Chrome, but in Firefox and IE it is automatic */
    box-shadow: 0px 1px 2px rgba(0, 0, 0, .1);
}

/* All the same stuff for Firefox */
input[type=range]::-moz-range-thumb {
    border: 1px solid white;
    height: 14px;
    width: 10px;
    border-radius: 0px;
    background: rgb(10, 10, 10);
    cursor: pointer;
}

input[type=range]::-webkit-slider-runnable-track {
    width: 100%;
    height: 8.4px;
    cursor: pointer;
    background: rgb(10, 10, 10);
    border-radius: 1.3px;
}

input[type=range]:focus::-webkit-slider-runnable-track {
    background: var(--lightgray);
}

input[type=range]::-moz-range-track {
    width: 100%;
    height: 5px;
    cursor: pointer;
    border: 1px solid white;
    background: rgb(10, 10, 10);
    border-radius: 2px;
}

input[type=range]::-ms-track {
    width: 100%;
    height: 8.4px;
    cursor: pointer;
    background: transparent;
    border-color: transparent;
    border-width: 16px 0;
    color: transparent;
}

input[type=range]::-ms-fill-lower {
    background: var(--lightgray);
    border: 0.2px solid #010101;
    border-radius: 2.6px;
    box-shadow: 1px 1px 1px #000000, 0px 0px 1px #0d0d0d;
}

input[type=range]:focus::-ms-fill-lower {
    background: #3071a9;
}

input[type=range]::-ms-fill-upper {
    background: #3071a9;
    border: 0.2px solid #010101;
    border-radius: 2.6px;
    box-shadow: 1px 1px 1px #000000, 0px 0px 1px #0d0d0d;
}

input[type=range]:focus::-ms-fill-upper {
    background: #367ebd;
}

line {
    stroke: gray;
    stroke-width: 1px;
}

.element {
    fill: white;
} 

.settings {
    display: block;
    position: absolute;
    top: 4rem;
    left: 5rem;
    border-radius: 2px;
    padding: 1rem;
    display: grid;
    background: black;
}
.setting {
    margin-bottom: 1rem;
    max-width: 100%;
    color: white;
}
label {
    font-size: .9rem;
    display: block;
    margin-bottom: 0rem;
}
.max-container {
    
    background-color: rgba(0,0,0,.9);
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    font-family: lucida console;
    font-size: 1rem !important;
    opacity: 0;
    transition: 200ms;
    pointer-events: none;
    &.active {
        pointer-events: all;
        opacity: 1;
    }
    svg {
        max-height: 100vh;
        max-width: 100vw;
        position: absolute;
        top: 50%;
        border: 1px solid yellow;
        left: 50%;
        transform: translateX(-50%) translateY(-50%);
    }

}